{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Parameters": {
    "KeyName": {
      "Description": "Name of an existing ec2 KeyPair to enable SSH access",
      "Type": "AWS::EC2::KeyPair::KeyName",
      "ConstraintDescription": "Must be the name of an existing EC2 KeyPair"
    },
    "domaintag": {
      "Description": "Unique domain tag",
      "Type": "String",
      "MinLength": "3",
      "MaxLength": "12",
      "Default": "abc",
      "AllowedPattern" : "^[a-z][a-z0-9]{2,11}$",
      "ConstraintDescription": "^[a-z][a-z0-9]{2,11}$"
    }

  },

  "Mappings" : {
        "RegionToAMI" : {
                "us-east-1": {
                        "centos": "ami-6d1c2007",
                        "ubuntu": "ami-2d39803a"
                },
                "us-west-1": {
                        "centos": "ami-af4333cf",
                        "ubuntu": "ami-48db9d28"
                },
                "us-west-2": {
                        "centos": "ami-d2c924b2",
                        "ubuntu": "ami-d732f0b7"
                },
                "ap-south-1": {
                        "centos": "ami-95cda6fa",
                        "ubuntu": "ami-4a90fa25"
                },
                "ap-northeast-2": {
                        "centos": "ami-c74789a9",
                        "ubuntu": "ami-09dc1267"
                },
                "ap-southeast-1": {
                        "centos": "ami-eec1c380",
                        "ubuntu": "ami-21d30f42"
                },
                "ap-southeast-2": {
                        "centos": "ami-fedafc9d",
                        "ubuntu": "ami-ba3e14d9"
                },
                "ap-northeast-1": {
                        "centos": "ami-eec1c380",
                        "ubuntu": "ami-a21529cc"
                },
                "eu-central-1": {
                        "centos": "ami-9bf712f4",
                        "ubuntu": "ami-26c43149"
                },
                "eu-west-1": {
                        "centos": "ami-7abd0209",
                        "ubuntu": "ami-ed82e39e"
                },
                "sa-east-1": {
                        "centos": "ami-26b93b4a",
                        "ubuntu": "ami-dc48dcb0"
                }
         }
  },


  "Resources": {
    "VPC": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "EnableDnsSupport": true,
        "EnableDnsHostnames": true,
        "CidrBlock": "10.0.0.0/16",
        "Tags": [
          {
            "Key": "Application",
            "Value": {
              "Ref": "AWS::StackId"
            }
          }
        ]
      }
    },
    "Subnet": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "CidrBlock": "10.0.0.0/24",
        "Tags": [
          {
            "Key": "Application",
            "Value": {
              "Ref": "AWS::StackId"
            }
          }
        ]
      }
    },
    "InternetGateway": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
        "Tags": [
          {
            "Key": "Application",
            "Value": {
              "Ref": "AWS::StackId"
            }
          }
        ]
      }
    },
    "AttachGateway": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "InternetGatewayId": {
          "Ref": "InternetGateway"
        }
      }
    },
    "RouteTable": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "Tags": [
          {
            "Key": "Application",
            "Value": {
              "Ref": "AWS::StackId"
            }
          }
        ]
      }
    },
    "Route": {
      "Type": "AWS::EC2::Route",
      "DependsOn": "AttachGateway",
      "Properties": {
        "RouteTableId": {
          "Ref": "RouteTable"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "InternetGateway"
        }
      }
    },
    "SubnetRouteTableAssociation": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "SubnetId": {
          "Ref": "Subnet"
        },
        "RouteTableId": {
          "Ref": "RouteTable"
        }
      }
    },
    "NetworkAcl": {
      "Type": "AWS::EC2::NetworkAcl",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "Tags": [
          {
            "Key": "Application",
            "Value": {
              "Ref": "AWS::StackId"
            }
          }
        ]
      }
    },
    "InboundHTTPNetworkAclEntry": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId": {
          "Ref": "NetworkAcl"
        },
        "RuleNumber": "100",
        "Protocol": "6",
        "RuleAction": "allow",
        "Egress": "false",
        "CidrBlock": "0.0.0.0/0",
        "PortRange": {
          "From": "80",
          "To": "80"
        }
      }
    },
    "InboundSSHNetworkAclEntry": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId": {
          "Ref": "NetworkAcl"
        },
        "RuleNumber": "101",
        "Protocol": "6",
        "RuleAction": "allow",
        "Egress": "false",
        "CidrBlock": "0.0.0.0/0",
        "PortRange": {
          "From": "22",
          "To": "22"
        }
      }
    },
    "InboundResponsePortsNetworkAclEntry": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId": {
          "Ref": "NetworkAcl"
        },
        "RuleNumber": "102",
        "Protocol": "6",
        "RuleAction": "allow",
        "Egress": "false",
        "CidrBlock": "0.0.0.0/0",
        "PortRange": {
          "From": "1024",
          "To": "65535"
        }
      }
    },
    "InboundHTTPSPortsNetworkAclEntry": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId": {
          "Ref": "NetworkAcl"
        },
        "RuleNumber": "103",
        "Protocol": "6",
        "RuleAction": "allow",
        "Egress": "false",
        "CidrBlock": "0.0.0.0/0",
        "PortRange": {
          "From": "443",
          "To": "443"
        }
      }
    },
    "OutBoundHTTPNetworkAclEntry": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId": {
          "Ref": "NetworkAcl"
        },
        "RuleNumber": "100",
        "Protocol": "6",
        "RuleAction": "allow",
        "Egress": "true",
        "CidrBlock": "0.0.0.0/0",
        "PortRange": {
          "From": "80",
          "To": "80"
        }
      }
    },
    "OutBoundHTTPSNetworkAclEntry": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId": {
          "Ref": "NetworkAcl"
        },
        "RuleNumber": "101",
        "Protocol": "6",
        "RuleAction": "allow",
        "Egress": "true",
        "CidrBlock": "0.0.0.0/0",
        "PortRange": {
          "From": "443",
          "To": "443"
        }
      }
    },
    "OutBoundResponsePortsNetworkAclEntry": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId": {
          "Ref": "NetworkAcl"
        },
        "RuleNumber": "102",
        "Protocol": "6",
        "RuleAction": "allow",
        "Egress": "true",
        "CidrBlock": "0.0.0.0/0",
        "PortRange": {
          "From": "1024",
          "To": "65535"
        }
      }
    },
    "OutBoundSSHNetworkAclEntry": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "NetworkAclId": {
          "Ref": "NetworkAcl"
        },
        "RuleNumber": "103",
        "Protocol": "6",
        "RuleAction": "allow",
        "Egress": "true",
        "CidrBlock": "0.0.0.0/0",
        "PortRange": {
          "From": "22",
          "To": "22"
        }
      }
    },
    "SubnetNetworkAclAssociation": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "SubnetId": {
          "Ref": "Subnet"
        },
        "NetworkAclId": {
          "Ref": "NetworkAcl"
        }
      }
    },
    "DeliverySecGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "GroupDescription": "Enable required ports for Delivery Cluster",
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "22",
            "ToPort": "22",
            "CidrIp":  "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "443",
            "ToPort": "443",
	    "CidrIp":  "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "80",
            "ToPort": "80",
            "CidrIp":  "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "8080",
            "ToPort": "8080",
            "CidrIp":  "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "8000",
            "ToPort": "8000",
            "CidrIp":  "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "80",
            "ToPort": "80",
            "CidrIp": "10.0.0.0/8"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "10012",
            "ToPort": "10013",
            "CidrIp": "10.0.0.0/8"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "6443",
            "ToPort": "6443",
            "CidrIp": "10.0.0.0/8"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "4321",
            "ToPort": "4321",
            "CidrIp": "10.0.0.0/8"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "5672",
            "ToPort": "5672",
            "CidrIp": "10.0.0.0/8"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "9683",
            "ToPort": "9683",
            "CidrIp": "10.0.0.0/8"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "8080",
            "ToPort": "8099",
            "CidrIp": "10.0.0.0/8"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "909",
            "ToPort": "909",
            "CidrIp": "10.0.0.0/8"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "808",
            "ToPort": "808",
            "CidrIp": "10.0.0.0/8"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "8989",
            "ToPort": "8989",
            "CidrIp": "10.0.0.0/8"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "389",
            "ToPort": "389",
            "CidrIp": "10.0.0.0/8"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "3389",
            "ToPort": "3389",
            "CidrIp": "10.0.0.0/8"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "443",
            "ToPort": "443",
            "CidrIp": "10.0.0.0/8"
          },
          {
            "IpProtocol": "icmp",
            "FromPort": "-1",
            "ToPort": "-1",
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "5985",
            "ToPort": "5985",
            "CidrIp": "10.0.0.0/8"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "9000",
            "ToPort": "9000",
            "CidrIp": "10.0.0.0/8"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "8000",
            "ToPort": "8000",
            "CidrIp": "10.0.0.0/8"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "22",
            "ToPort": "22",
            "CidrIp": "10.0.0.0/8"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "10000",
            "ToPort": "10003",
            "CidrIp": "10.0.0.0/8"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "8089",
            "ToPort": "8089",
            "CidrIp": "10.0.0.0/8"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "7080",
            "ToPort": "7080",
            "CidrIp": "10.0.0.0/8"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "5986",
            "ToPort": "5986",
            "CidrIp": "10.0.0.0/8"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "3269",
            "ToPort": "3269",
            "CidrIp": "10.0.0.0/8"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "9997",
            "ToPort": "9997",
            "CidrIp": "10.0.0.0/8"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "1337",
            "ToPort": "1337",
            "CidrIp": "10.0.0.0/8"
          }
        ]
      }
    },
    "ChefServer": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "InstanceType": "t2.large",
        "Tags": [
          {
            "Key": "Name",
            "Value": { "Fn::Join": [ ".", [  "chefserver01",  { "Ref": "domaintag" }, "demo.li9.com"  ]] }
          }
        ],
        "NetworkInterfaces": [
          {
            "GroupSet": [
              {
                "Ref": "DeliverySecGroup"
              }
            ],
            "AssociatePublicIpAddress": "true",
            "PrivateIpAddress": "10.0.0.11",
            "DeviceIndex": "0",
            "DeleteOnTermination": "true",
            "SubnetId": {
              "Ref": "Subnet"
            }
          }
        ],
        "KeyName": {
          "Ref": "KeyName"
        },
        "ImageId": { "Fn::FindInMap" : [ "RegionToAMI", { "Ref" : "AWS::Region" }, "centos"]}
      }
    },
    "ChefAutomate": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "InstanceType": "t2.large",
        "Tags": [
          {
            "Key": "Name",
            "Value": { "Fn::Join": [ ".", [  "chefautomate01",  { "Ref": "domaintag" }, "demo.li9.com"  ]] }
          }
        ],
        "NetworkInterfaces": [
          {
            "GroupSet": [
              {
                "Ref": "DeliverySecGroup"
              }
            ],
            "AssociatePublicIpAddress": "true",
            "PrivateIpAddress": "10.0.0.12",
            "DeviceIndex": "0",
            "DeleteOnTermination": "true",
            "SubnetId": {
              "Ref": "Subnet"
            }
          }
        ],
        "KeyName": {
          "Ref": "KeyName"
        },
        "ImageId": { "Fn::FindInMap" : [ "RegionToAMI", { "Ref" : "AWS::Region" }, "centos"]}
      }
    },
    "ChefCompliance": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "InstanceType": "t2.small",
        "Tags": [
          {
            "Key": "Name",
            "Value": { "Fn::Join": [ ".", [  "chefcompliance01",  { "Ref": "domaintag" }, "demo.li9.com"  ]] }
          }
        ],
        "NetworkInterfaces": [
          {
            "GroupSet": [
              {
                "Ref": "DeliverySecGroup"
              }
            ],
            "AssociatePublicIpAddress": "true",
            "PrivateIpAddress": "10.0.0.20",
            "DeviceIndex": "0",
            "DeleteOnTermination": "true",
            "SubnetId": {
              "Ref": "Subnet"
            }
          }
        ],
        "KeyName": {
          "Ref": "KeyName"
        },
        "ImageId": { "Fn::FindInMap" : [ "RegionToAMI", { "Ref" : "AWS::Region" }, "centos"]}
      }
    },
    "BuildNode01": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "InstanceType": "t2.small",
        "Tags": [
          {
            "Key": "Name",
            "Value": { "Fn::Join": [ ".", [  "buildnode01",  { "Ref": "domaintag" }, "demo.li9.com"  ]] }
          }
        ],
        "NetworkInterfaces": [
          {
            "GroupSet": [
              {
                "Ref": "DeliverySecGroup"
              }
            ],
            "AssociatePublicIpAddress": "true",
            "PrivateIpAddress": "10.0.0.13",
            "DeviceIndex": "0",
            "DeleteOnTermination": "true",
            "SubnetId": {
              "Ref": "Subnet"
            }
          }
        ],
        "KeyName": {
          "Ref": "KeyName"
        },
        "ImageId": { "Fn::FindInMap" : [ "RegionToAMI", { "Ref" : "AWS::Region" }, "centos"]}
      }
    },
    "BuildNode02": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "InstanceType": "t2.small",
        "Tags": [
          {
            "Key": "Name",
            "Value": { "Fn::Join": [ ".", [  "buildnode02",  { "Ref": "domaintag" }, "demo.li9.com"  ]] }
          }
        ],
        "NetworkInterfaces": [
          {
            "GroupSet": [
              {
                "Ref": "DeliverySecGroup"
              }
            ],
            "AssociatePublicIpAddress": "true",
            "PrivateIpAddress": "10.0.0.14",
            "DeviceIndex": "0",
            "DeleteOnTermination": "true",
            "SubnetId": {
              "Ref": "Subnet"
            }
          }
        ],
        "KeyName": {
          "Ref": "KeyName"
        },
        "ImageId": { "Fn::FindInMap" : [ "RegionToAMI", { "Ref" : "AWS::Region" }, "centos"]}
      }
    },
    "BuildNode03": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "InstanceType": "t2.small",
        "Tags": [
          {
            "Key": "Name",
            "Value": { "Fn::Join": [ ".", [  "buildnode03",  { "Ref": "domaintag" }, "demo.li9.com"  ]] }
          }
        ],
        "NetworkInterfaces": [
          {
            "GroupSet": [
              {
                "Ref": "DeliverySecGroup"
              }
            ],
            "AssociatePublicIpAddress": "true",
            "PrivateIpAddress": "10.0.0.18",
            "DeviceIndex": "0",
            "DeleteOnTermination": "true",
            "SubnetId": {
              "Ref": "Subnet"
            }
          }
        ],
        "KeyName": {
          "Ref": "KeyName"
        },
        "ImageId": { "Fn::FindInMap" : [ "RegionToAMI", { "Ref" : "AWS::Region" }, "centos"]}
      }
    },
    "WorkStation": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "InstanceType": "t2.small",
        "Tags": [
          {
            "Key": "Name",
            "Value": { "Fn::Join": [ ".", [  "workstation01",  { "Ref": "domaintag" }, "demo.li9.com"  ]] }
          }
        ],
        "NetworkInterfaces": [
          {
            "GroupSet": [
              {
                "Ref": "DeliverySecGroup"
              }
            ],
            "AssociatePublicIpAddress": "true",
            "PrivateIpAddress": "10.0.0.24",
            "DeviceIndex": "0",
            "DeleteOnTermination": "true",
            "SubnetId": {
              "Ref": "Subnet"
            }
          }
        ],
        "KeyName": {
          "Ref": "KeyName"
        },
        "ImageId": { "Fn::FindInMap" : [ "RegionToAMI", { "Ref" : "AWS::Region" }, "centos"]}
      }
    },
    "Acceptance": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "InstanceType": "t2.small",
        "Tags": [
          {
            "Key": "Name",
            "Value": { "Fn::Join": [ ".", [  "acceptance01",  { "Ref": "domaintag" }, "demo.li9.com"  ]] }
          }
        ],
        "NetworkInterfaces": [
          {
            "GroupSet": [
              {
                "Ref": "DeliverySecGroup"
              }
            ],
            "AssociatePublicIpAddress": "true",
            "PrivateIpAddress": "10.0.0.15",
            "DeviceIndex": "0",
            "DeleteOnTermination": "true",
            "SubnetId": {
              "Ref": "Subnet"
            }
          }
        ],
        "KeyName": {
          "Ref": "KeyName"
        },
        "ImageId": { "Fn::FindInMap" : [ "RegionToAMI", { "Ref" : "AWS::Region" }, "ubuntu"]}
      }
    },
    "Union": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "InstanceType": "t2.small",
        "Tags": [
          {
            "Key": "Name",
            "Value": { "Fn::Join": [ ".", [  "union01",  { "Ref": "domaintag" }, "demo.li9.com"  ]] }
          }
        ],
        "NetworkInterfaces": [
          {
            "GroupSet": [
              {
                "Ref": "DeliverySecGroup"
              }
            ],
            "AssociatePublicIpAddress": "true",
            "PrivateIpAddress": "10.0.0.25",
            "DeviceIndex": "0",
            "DeleteOnTermination": "true",
            "SubnetId": {
              "Ref": "Subnet"
            }
          }
        ],
        "KeyName": {
          "Ref": "KeyName"
        },
        "ImageId": { "Fn::FindInMap" : [ "RegionToAMI", { "Ref" : "AWS::Region" }, "ubuntu"]}
      }
    },
    "Rehearsal": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "InstanceType": "t2.small",
        "Tags": [
          {
            "Key": "Name",
            "Value": { "Fn::Join": [ ".", [  "rehearsal01",  { "Ref": "domaintag" }, "demo.li9.com"  ]] }
          }
        ],
        "NetworkInterfaces": [
          {
            "GroupSet": [
              {
                "Ref": "DeliverySecGroup"
              }
            ],
            "AssociatePublicIpAddress": "true",
            "PrivateIpAddress": "10.0.0.16",
            "DeviceIndex": "0",
            "DeleteOnTermination": "true",
            "SubnetId": {
              "Ref": "Subnet"
            }
          }
        ],
        "KeyName": {
          "Ref": "KeyName"
        },
        "ImageId": { "Fn::FindInMap" : [ "RegionToAMI", { "Ref" : "AWS::Region" }, "ubuntu"]}
      }
    },
    "Delivered": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "InstanceType": "t2.small",
        "Tags": [
          {
            "Key": "Name",
            "Value": { "Fn::Join": [ ".", [  "delivered01",  { "Ref": "domaintag" }, "demo.li9.com"  ]] }
          }
        ],
        "NetworkInterfaces": [
          {
            "GroupSet": [
              {
                "Ref": "DeliverySecGroup"
              }
            ],
            "AssociatePublicIpAddress": "true",
            "PrivateIpAddress": "10.0.0.17",
            "DeviceIndex": "0",
            "DeleteOnTermination": "true",
            "SubnetId": {
              "Ref": "Subnet"
            }
          }
        ],
        "KeyName": {
          "Ref": "KeyName"
        },
        "ImageId": { "Fn::FindInMap" : [ "RegionToAMI", { "Ref" : "AWS::Region" }, "ubuntu"]}
      }
    },

    "DNSZone" : {
        "Type" : "AWS::Route53::RecordSet",
        "Properties" : {
                "HostedZoneId" :  "ZG1LSIRFXEMSJ",
                "Comment" : "DNS name for my temporary zone.",  
                "Name" :  { "Fn::Join": [ ".", [ { "Ref": "domaintag" }, "demo.li9.com"  ]] },
                "Type" : "A",
                "TTL" : "900",
                "ResourceRecords" : [ { "Fn::GetAtt" : [ "Delivered", "PublicIp" ] } ]
        }
    },
    "DNSChefServer" : {
        "Type" : "AWS::Route53::RecordSet",
        "Properties" : {
                "HostedZoneId" :  "ZG1LSIRFXEMSJ",
                "Comment" : "DNS name for my temporary zone.",
                "Name" :  { "Fn::Join": [ ".", [  "chefserver01",  { "Ref": "domaintag" }, "demo.li9.com"  ]] },
                "Type" : "A",
                "TTL" : "900",
                "ResourceRecords" : [ { "Fn::GetAtt" : [ "ChefServer", "PublicIp" ] } ]
        }
    },
    "DNSChefAutomate" : {
        "Type" : "AWS::Route53::RecordSet",
        "Properties" : {
                "HostedZoneId" :  "ZG1LSIRFXEMSJ",
                "Comment" : "DNS name for my temporary zone.",
                "Name" :  { "Fn::Join": [ ".", [  "chefautomate01",  { "Ref": "domaintag" }, "demo.li9.com"  ]] },
                "Type" : "A",
                "TTL" : "900",
                "ResourceRecords" : [ { "Fn::GetAtt" : [ "ChefAutomate", "PublicIp" ] } ]
        }
    },
    "DNSChefCompliance" : {
        "Type" : "AWS::Route53::RecordSet",
        "Properties" : {
                "HostedZoneId" :  "ZG1LSIRFXEMSJ",
                "Comment" : "DNS name for my temporary zone.",
                "Name" :  { "Fn::Join": [ ".", [  "chefcompliance01",  { "Ref": "domaintag" }, "demo.li9.com"  ]] },
                "Type" : "A",
                "TTL" : "900",
                "ResourceRecords" : [ { "Fn::GetAtt" : [ "ChefCompliance", "PublicIp" ] } ]
        }
    },
    "DNSWorkStation" : {
        "Type" : "AWS::Route53::RecordSet",
        "Properties" : {
                "HostedZoneId" :  "ZG1LSIRFXEMSJ",
                "Comment" : "DNS name for my temporary zone.",
                "Name" :  { "Fn::Join": [ ".", [  "chefworkstation",  { "Ref": "domaintag" }, "demo.li9.com"  ]] },
                "Type" : "A",
                "TTL" : "900",
                "ResourceRecords" : [ { "Fn::GetAtt" : [ "WorkStation", "PublicIp" ] } ]
        }
    },
    "DNSBuildNode01" : {
        "Type" : "AWS::Route53::RecordSet",
        "Properties" : {
                "HostedZoneId" :  "ZG1LSIRFXEMSJ",
                "Comment" : "DNS name for my temporary zone.",
                "Name" :  { "Fn::Join": [ ".", [  "buildnode01",  { "Ref": "domaintag" }, "demo.li9.com"  ]] },
                "Type" : "A",
                "TTL" : "900",
                "ResourceRecords" : [ { "Fn::GetAtt" : [ "BuildNode01", "PublicIp" ] } ]
        }
    },
    "DNSBuildNode02" : {
        "Type" : "AWS::Route53::RecordSet",
        "Properties" : {
                "HostedZoneId" :  "ZG1LSIRFXEMSJ",
                "Comment" : "DNS name for my temporary zone.",
                "Name" :  { "Fn::Join": [ ".", [  "buildnode02",  { "Ref": "domaintag" }, "demo.li9.com"  ]] },
                "Type" : "A",
                "TTL" : "900",
                "ResourceRecords" : [ { "Fn::GetAtt" : [ "BuildNode02", "PublicIp" ] } ]
        }
    },
    "DNSBuildNode03" : {
        "Type" : "AWS::Route53::RecordSet",
        "Properties" : {
                "HostedZoneId" :  "ZG1LSIRFXEMSJ",
                "Comment" : "DNS name for my temporary zone.",
                "Name" :  { "Fn::Join": [ ".", [  "buildnode03",  { "Ref": "domaintag" }, "demo.li9.com"  ]] },
                "Type" : "A",
                "TTL" : "900",
                "ResourceRecords" : [ { "Fn::GetAtt" : [ "BuildNode03", "PublicIp" ] } ]
        }
    },
    "DNSAcceptance" : {
        "Type" : "AWS::Route53::RecordSet",
        "Properties" : {
                "HostedZoneId" :  "ZG1LSIRFXEMSJ",
                "Comment" : "DNS name for my temporary zone.",
                "Name" :  { "Fn::Join": [ ".", [  "acceptance01",  { "Ref": "domaintag" }, "demo.li9.com"  ]] },
                "Type" : "A",
                "TTL" : "900",
                "ResourceRecords" : [ { "Fn::GetAtt" : [ "Acceptance", "PublicIp" ] } ]
        }
    },
    "DNSUnion" : {
        "Type" : "AWS::Route53::RecordSet",
        "Properties" : {
                "HostedZoneId" :  "ZG1LSIRFXEMSJ",
                "Comment" : "DNS name for my temporary zone.",
                "Name" :  { "Fn::Join": [ ".", [  "union01",  { "Ref": "domaintag" }, "demo.li9.com"  ]] },
                "Type" : "A",
                "TTL" : "900",
                "ResourceRecords" : [ { "Fn::GetAtt" : [ "Union", "PublicIp" ] } ]
        }
    },
    "DNSRehearsal" : {
        "Type" : "AWS::Route53::RecordSet",
        "Properties" : {
                "HostedZoneId" :  "ZG1LSIRFXEMSJ",
                "Comment" : "DNS name for my temporary zone.",
                "Name" :  { "Fn::Join": [ ".", [  "rehearsal01",  { "Ref": "domaintag" }, "demo.li9.com"  ]] },
                "Type" : "A",
                "TTL" : "900",
                "ResourceRecords" : [ { "Fn::GetAtt" : [ "Rehearsal", "PublicIp" ] } ]
        }
    },
    "DNSDelivered" : {
        "Type" : "AWS::Route53::RecordSet",
        "Properties" : {
                "HostedZoneId" :  "ZG1LSIRFXEMSJ",
                "Comment" : "DNS name for my temporary zone.",
                "Name" :  { "Fn::Join": [ ".", [  "delivered01",  { "Ref": "domaintag" }, "demo.li9.com"  ]] },
                "Type" : "A",
                "TTL" : "900",
                "ResourceRecords" : [ { "Fn::GetAtt" : [ "Delivered", "PublicIp" ] } ]
        }
    }


  },




  "Outputs": {
    "chefserver01": {
      "Description": "chefserver01",
      "Value": {
        "Fn::GetAtt": [
          "ChefServer",
          "PublicIp"
        ]
      }
    },
    "chefautomate01": {
      "Description": "chefautomate01",
      "Value": {
        "Fn::GetAtt": [
          "ChefAutomate",
          "PublicIp"
        ]
      }
    },
    "workstaion01": {
      "Description": "workstaion01",
      "Value": {
        "Fn::GetAtt": [
          "WorkStation",
          "PublicIp"
        ]
      }
    },
    "chefcompliance01": {
      "Description": "chefcompliance01",
      "Value": {
        "Fn::GetAtt": [
          "ChefCompliance",
          "PublicIp"
        ]
      }
    },
    "buildnode01": {
      "Description": "buildnode01",
      "Value": {
        "Fn::GetAtt": [
          "BuildNode01",
          "PublicIp"
        ]
      }
    },
    "buildnode02": {
      "Description": "buildnode02",
      "Value": {
        "Fn::GetAtt": [
          "BuildNode02",
          "PublicIp"
        ]
      }
    },
    "buildnode03": {
      "Description": "buildnode03",
      "Value": {
        "Fn::GetAtt": [
          "BuildNode03",
          "PublicIp"
        ]
      }
    },

    "union01": {
      "Description": "union01",
      "Value": {
        "Fn::GetAtt": [
          "Union",
          "PublicIp"
        ]
      }
    },
    "rehearsal01": {
      "Description": "rehearsal01",
      "Value": {
        "Fn::GetAtt": [
          "Rehearsal",
          "PublicIp"
        ]
      }
    },
    "delivered01": {
      "Description": "delivered01",
      "Value": {
        "Fn::GetAtt": [
          "Delivered",
          "PublicIp"
        ]
      }
    },
    "acceptance01": {
      "Description": "acceptance01",
      "Value": {
        "Fn::GetAtt": [
          "Acceptance",
          "PublicIp"
        ]
      }
    }
  }
}

